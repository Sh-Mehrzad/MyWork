// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWork.Models;

namespace MyWork.Migrations
{
    [DbContext(typeof(MyWorkContext))]
    partial class MyWorkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyWork.Models.Bireysel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad");

                    b.Property<DateTime>("AppliedDate");

                    b.Property<string>("Email");

                    b.Property<string>("Meslegi");

                    b.Property<string>("Not");

                    b.Property<string>("ReferansFirma");

                    b.Property<string>("Soyad");

                    b.Property<string>("Telefon");

                    b.HasKey("ID");

                    b.ToTable("Bireysel");
                });

            modelBuilder.Entity("MyWork.Models.Il", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IlAdi");

                    b.HasKey("ID");

                    b.ToTable("Il");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            IlAdi = "Adana"
                        },
                        new
                        {
                            ID = 2,
                            IlAdi = "Ankara"
                        },
                        new
                        {
                            ID = 3,
                            IlAdi = "Adıyaman"
                        },
                        new
                        {
                            ID = 4,
                            IlAdi = "Afyonkarahisar"
                        },
                        new
                        {
                            ID = 5,
                            IlAdi = "Aksaray"
                        },
                        new
                        {
                            ID = 6,
                            IlAdi = "Amasya"
                        },
                        new
                        {
                            ID = 7,
                            IlAdi = "Antalya"
                        },
                        new
                        {
                            ID = 8,
                            IlAdi = "Ardahan"
                        },
                        new
                        {
                            ID = 9,
                            IlAdi = "Artvin"
                        },
                        new
                        {
                            ID = 10,
                            IlAdi = "Aydın"
                        },
                        new
                        {
                            ID = 11,
                            IlAdi = "Ağrı"
                        },
                        new
                        {
                            ID = 12,
                            IlAdi = "Balıkesir"
                        },
                        new
                        {
                            ID = 13,
                            IlAdi = "Bartın"
                        },
                        new
                        {
                            ID = 14,
                            IlAdi = "Batman"
                        },
                        new
                        {
                            ID = 15,
                            IlAdi = "Bayburt"
                        },
                        new
                        {
                            ID = 16,
                            IlAdi = "Bilecik"
                        },
                        new
                        {
                            ID = 17,
                            IlAdi = "Bingöl İli"
                        },
                        new
                        {
                            ID = 18,
                            IlAdi = "Bitlis"
                        });
                });

            modelBuilder.Entity("MyWork.Models.Ilce", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IlID");

                    b.Property<string>("IlceAdi");

                    b.HasKey("ID");

                    b.HasIndex("IlID");

                    b.ToTable("ilce");
                });

            modelBuilder.Entity("MyWork.Models.Kurumsal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres");

                    b.Property<DateTime>("AppliedDate");

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<string>("FirmaAdi")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("GSM");

                    b.Property<int?>("IlID");

                    b.Property<int?>("IlceID");

                    b.Property<string>("Not");

                    b.Property<string>("Telefon");

                    b.Property<string>("VergiDairesi");

                    b.Property<string>("VergiNo");

                    b.Property<string>("Website");

                    b.Property<string>("Yetkili");

                    b.HasKey("ID");

                    b.HasIndex("IlID");

                    b.HasIndex("IlceID");

                    b.ToTable("Kurumsal");
                });

            modelBuilder.Entity("MyWork.Models.Paket", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaketName");

                    b.HasKey("ID");

                    b.ToTable("paket");
                });

            modelBuilder.Entity("MyWork.Models.PaketList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AppliedDate");

                    b.Property<int?>("BireyselID");

                    b.Property<DateTime>("EndDate");

                    b.Property<int?>("KurumsalID");

                    b.Property<int?>("PaketID");

                    b.Property<DateTime>("startDate");

                    b.HasKey("ID");

                    b.HasIndex("BireyselID");

                    b.HasIndex("KurumsalID");

                    b.HasIndex("PaketID");

                    b.ToTable("PaketList");
                });

            modelBuilder.Entity("MyWork.Models.Reklam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReklamName");

                    b.HasKey("ID");

                    b.ToTable("Reklam");
                });

            modelBuilder.Entity("MyWork.Models.ReklamList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AppliedDate");

                    b.Property<int?>("BireyselID");

                    b.Property<DateTime>("EndDate");

                    b.Property<int?>("KurumsalID");

                    b.Property<int?>("ReklamID");

                    b.Property<DateTime>("startDate");

                    b.HasKey("ID");

                    b.HasIndex("BireyselID");

                    b.HasIndex("KurumsalID");

                    b.HasIndex("ReklamID");

                    b.ToTable("ReklamList");
                });

            modelBuilder.Entity("MyWork.Models.Ilce", b =>
                {
                    b.HasOne("MyWork.Models.Il", "Il")
                        .WithMany("IlceList")
                        .HasForeignKey("IlID");
                });

            modelBuilder.Entity("MyWork.Models.Kurumsal", b =>
                {
                    b.HasOne("MyWork.Models.Il", "Il")
                        .WithMany()
                        .HasForeignKey("IlID");

                    b.HasOne("MyWork.Models.Ilce", "Ilce")
                        .WithMany()
                        .HasForeignKey("IlceID");
                });

            modelBuilder.Entity("MyWork.Models.PaketList", b =>
                {
                    b.HasOne("MyWork.Models.Bireysel", "Bireysel")
                        .WithMany("PaketList")
                        .HasForeignKey("BireyselID");

                    b.HasOne("MyWork.Models.Kurumsal", "Kurumsal")
                        .WithMany("PaketList")
                        .HasForeignKey("KurumsalID");

                    b.HasOne("MyWork.Models.Paket", "Paket")
                        .WithMany()
                        .HasForeignKey("PaketID");
                });

            modelBuilder.Entity("MyWork.Models.ReklamList", b =>
                {
                    b.HasOne("MyWork.Models.Bireysel", "Bireysel")
                        .WithMany("ReklamList")
                        .HasForeignKey("BireyselID");

                    b.HasOne("MyWork.Models.Kurumsal", "Kurumsal")
                        .WithMany("ReklamList")
                        .HasForeignKey("KurumsalID");

                    b.HasOne("MyWork.Models.Reklam", "Reklam")
                        .WithMany()
                        .HasForeignKey("ReklamID");
                });
#pragma warning restore 612, 618
        }
    }
}
